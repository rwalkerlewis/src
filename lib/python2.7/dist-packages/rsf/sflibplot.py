import rsf.doc

sfstdplot = rsf.doc.rsfprog('sfstdplot','plot/lib/Mstdplot.c','''Setting up frames for a generic plot. ''')
sfstdplot.par('backcol',rsf.doc.rsfpar('floats','','',''' [3]'''))
sfstdplot.par('fillcol',rsf.doc.rsfpar('floats','','',''' [3]'''))
sfstdplot.par('dash',rsf.doc.rsfpar('floats','','','''line dash type	
	    0 continuos (default)
	    1 fine dash
	    2 fine dot
	    3 dash
	    4 large dash
	    5 dot dash
	    6 large dash small dash
	    7 double dot
	    8 double dash
	    9 loose dash  The part after the decimal point determines the pattern repetition interval  [n2]'''))
sfstdplot.par('plotfat',rsf.doc.rsfpar('ints','','','''line fatness  [n2]'''))
sfstdplot.par('plotcol',rsf.doc.rsfpar('ints','','','''line color 
	   7 white
	   6 yellow (default)
	   5 cyan
	   4 green
	   3 magenta
	   2 red
	   1 blue
	   0 black  [n2]'''))
sfstdplot.par('xreverse',rsf.doc.rsfpar('bool','xreverse1','','''reverse horizontal axis '''))
sfstdplot.par('yreverse',rsf.doc.rsfpar('bool','yreverse1','','''reverse vertical axis '''))
sfstdplot.par('pad',rsf.doc.rsfpar('bool','pad1','','''pad plotting area '''))
sfstdplot.par('scalebar',rsf.doc.rsfpar('bool','n','','''plot a scalebar '''))
sfstdplot.par('barmove',rsf.doc.rsfpar('bool','n','','''adjust scalebar position, if bartype=h '''))
sfstdplot.par('tickscale',rsf.doc.rsfpar('float','0.5','','''ticks scaling '''))
sfstdplot.par('tickscale1',rsf.doc.rsfpar('float','tickscale','','''ticks scaling on first axis '''))
sfstdplot.par('tickscale2',rsf.doc.rsfpar('float','tickscale','','''ticks scaling on second axis '''))
sfstdplot.par('tickscale3',rsf.doc.rsfpar('float','tickscale','','''ticks scaling on third axis '''))
sfstdplot.par('tickscale4',rsf.doc.rsfpar('float','tickscale','','''ticks scaling on fourth axis '''))
sfstdplot.par('min1',rsf.doc.rsfpar('float','umin1','','''minimum on the first axis '''))
sfstdplot.par('min2',rsf.doc.rsfpar('float','umin2','','''minimum on the second axis '''))
sfstdplot.par('max1',rsf.doc.rsfpar('float','umax1','','''maximum on the first axis '''))
sfstdplot.par('max2',rsf.doc.rsfpar('float','umax2','','''maximum on the second axis '''))
sfstdplot.par('font',rsf.doc.rsfpar('int','-1','','''font to use in text '''))
sfstdplot.par('screenratio',rsf.doc.rsfpar('float','VP_SCREEN_RATIO','','''ratio of screen height to screen width '''))
sfstdplot.par('screenht',rsf.doc.rsfpar('float','VP_STANDARD_HEIGHT','','''screen height (in "inches") '''))
sfstdplot.par('screenwd',rsf.doc.rsfpar('float','screenht / screenratio','','''screen width (in "inches") '''))
sfstdplot.par('crowd',rsf.doc.rsfpar('float','0.75','','''window size as ratio of the total area '''))
sfstdplot.par('xinch',rsf.doc.rsfpar('float','','','''window width as ratio of the screen width '''))
sfstdplot.par('crowd1',rsf.doc.rsfpar('float','crowd','','''window width as ratio of the screen width '''))
sfstdplot.par('yinch',rsf.doc.rsfpar('float','','','''window height as ratio of the screen height '''))
sfstdplot.par('crowd2',rsf.doc.rsfpar('float','crowd','','''window height as ratio of the screen height '''))
sfstdplot.par('xll',rsf.doc.rsfpar('float','','','''lower left horizontal coordinate '''))
sfstdplot.par('xur',rsf.doc.rsfpar('float','','','''upper right horizontal coordinate '''))
sfstdplot.par('yll',rsf.doc.rsfpar('float','','','''lower left vertical coordinate '''))
sfstdplot.par('yur',rsf.doc.rsfpar('float','','','''upper right vertical coordinate '''))
sfstdplot.par('barwidth',rsf.doc.rsfpar('float','0.36','','''scale bar size '''))
sfstdplot.par('axiscol',rsf.doc.rsfpar('int','VP_WHITE','','''axes color '''))
sfstdplot.par('framelabelcol',rsf.doc.rsfpar('int','VP_YELLOW','','''frame labels color '''))
sfstdplot.par('cubelinecol',rsf.doc.rsfpar('int','framelabelcol','','''cube lines color '''))
sfstdplot.par('labelsz',rsf.doc.rsfpar('float','8.','',''''''))
sfstdplot.par('larnersz',rsf.doc.rsfpar('float','0.0f','','''give the font size as a fraction of the total screen height, 
       this is based on Ken Larner's 1/20 rule.
       Any positive larnersz value will overwrite labelsz with 
       the appropiate rule'''))
sfstdplot.par('labelrot',rsf.doc.rsfpar('bool','n','','''if rotate vertical label '''))
sfstdplot.par('grid1',rsf.doc.rsfpar('bool','transp? false: grid','','''( grid1 to draw grid on first axis )'''))
sfstdplot.par('grid2',rsf.doc.rsfpar('bool','transp? grid: false','','''( grid2 to draw grid on second axis )'''))
sfstdplot.par('gridcol',rsf.doc.rsfpar('int','grid? VP_RED: framecol','','''grid color '''))
sfstdplot.par('gridfat',rsf.doc.rsfpar('int','1','','''grid fatness '''))
sfstdplot.par('griddash',rsf.doc.rsfpar('float','0.0f','','''grid dash pattern '''))
sfstdplot.par('titlesz',rsf.doc.rsfpar('float','10.','','''title font size '''))
sfstdplot.par('barlabelsz',rsf.doc.rsfpar('float','','','''bar label font size '''))
sfstdplot.par('framelabel1',rsf.doc.rsfpar('bool','(bool) (NULL != label1)','','''to put numbers at frame ends '''))
sfstdplot.par('framelabel2',rsf.doc.rsfpar('bool','(bool) (NULL != label2)','','''to put numbers at frame ends '''))
sfstdplot.par('framelabel3',rsf.doc.rsfpar('bool','(bool) (NULL != label3)','','''to put numbers at frame ends '''))
sfstdplot.par('axisfat',rsf.doc.rsfpar('int','0','',''''''))
sfstdplot.par('axiscol',rsf.doc.rsfpar('int','7','',''''''))
sfstdplot.par('labelfat',rsf.doc.rsfpar('int','0','',''''''))
sfstdplot.par('labelsz',rsf.doc.rsfpar('float','8.','',''''''))
sfstdplot.par('wantaxis',rsf.doc.rsfpar('bool','','','''setting the default to put the axes on the plot '''))
sfstdplot.par('screenratio',rsf.doc.rsfpar('float','VP_SCREEN_RATIO','',''''''))
sfstdplot.par('screenht',rsf.doc.rsfpar('float','VP_STANDARD_HEIGHT','',''''''))
sfstdplot.par('screenwd',rsf.doc.rsfpar('float','screenht / screenratio','',''''''))
sfstdplot.par('crowd',rsf.doc.rsfpar('float','0.75','',''''''))
sfstdplot.par('xinch',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('crowd1',rsf.doc.rsfpar('float','crowd','',''''''))
sfstdplot.par('yinch',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('crowd2',rsf.doc.rsfpar('float','crowd','',''''''))
sfstdplot.par('xll',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('xur',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('yll',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('yur',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('transp',rsf.doc.rsfpar('bool','transp1','',''''''))
sfstdplot.par('xreverse',rsf.doc.rsfpar('bool','n','',''''''))
sfstdplot.par('yreverse',rsf.doc.rsfpar('bool','yreverse1','',''''''))
sfstdplot.par('labelrot',rsf.doc.rsfpar('bool','n','',''''''))
sfstdplot.par('min1',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('min2',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('max1',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('max2',rsf.doc.rsfpar('float','','',''''''))
sfstdplot.par('wanttitle',rsf.doc.rsfpar('bool','y','',''''''))
sfstdplot.par('titlefat',rsf.doc.rsfpar('int','0','',''''''))
sfstdplot.par('titlesz',rsf.doc.rsfpar('float','10.','',''''''))
sfstdplot.par('wantaxis',rsf.doc.rsfpar('bool','','','''if draw axes '''))
sfstdplot.par('wantaxis1',rsf.doc.rsfpar('bool','','','''if draw first axis '''))
sfstdplot.par('wantaxis2',rsf.doc.rsfpar('bool','','','''if draw second axis '''))
sfstdplot.par('wantaxis3',rsf.doc.rsfpar('bool','','','''if draw third axis in cube plots '''))
sfstdplot.par('labelfat',rsf.doc.rsfpar('int','','','''label fatness '''))
sfstdplot.par('label1',rsf.doc.rsfpar('string','','','''label on the first axis '''))
sfstdplot.par('unit1',rsf.doc.rsfpar('string','','','''unit on the first axis '''))
sfstdplot.par('label3',rsf.doc.rsfpar('string','','','''label on the third axis '''))
sfstdplot.par('unit3',rsf.doc.rsfpar('string','','','''unit on the third axis '''))
sfstdplot.par('label2',rsf.doc.rsfpar('string','','','''label on the second axis '''))
sfstdplot.par('unit2',rsf.doc.rsfpar('string','','','''unit on the second axis '''))
sfstdplot.par('nbartic',rsf.doc.rsfpar('int','','','''number of scalebar ticmarks '''))
sfstdplot.par('dbarnum',rsf.doc.rsfpar('string','','','''scalebar tic increment '''))
sfstdplot.par('obarnum',rsf.doc.rsfpar('float','','','''scalebar tic origin '''))
sfstdplot.par('wherebartics',rsf.doc.rsfpar('string','','','''where to put scalebar ticmarks '''))
sfstdplot.par('n1tic',rsf.doc.rsfpar('int','','','''axis1 number of ticmarks '''))
sfstdplot.par('d1num',rsf.doc.rsfpar('float','','','''axis1 tic increment '''))
sfstdplot.par('o1num',rsf.doc.rsfpar('float','','','''axis1 tic origin '''))
sfstdplot.par('n2tic',rsf.doc.rsfpar('int','','','''axis2 number of ticmarks '''))
sfstdplot.par('d2num',rsf.doc.rsfpar('float','','','''axis2 tic increment '''))
sfstdplot.par('o2num',rsf.doc.rsfpar('float','','','''axis2 tic origin '''))
sfstdplot.par('n3tic',rsf.doc.rsfpar('int','','','''axis3 number of ticmarks '''))
sfstdplot.par('d3num',rsf.doc.rsfpar('float','','','''axis3 tic increment '''))
sfstdplot.par('o3num',rsf.doc.rsfpar('float','','','''axis3 tic origin '''))
sfstdplot.par('n4tic',rsf.doc.rsfpar('int','','','''axis4 number of ticmarks '''))
sfstdplot.par('d4num',rsf.doc.rsfpar('float','','','''axis4 tic increment '''))
sfstdplot.par('o4num',rsf.doc.rsfpar('float','','','''axis4 tic origin '''))
sfstdplot.par('wheretics',rsf.doc.rsfpar('string','','','''where to put ticmarks '''))
sfstdplot.par('grid1',rsf.doc.rsfpar('bool','','','''to draw grid on first axis '''))
sfstdplot.par('g1num0',rsf.doc.rsfpar('float','','','''grid mark origin on first axis '''))
sfstdplot.par('g1num',rsf.doc.rsfpar('float','','','''grid mark sampling on first axis '''))
sfstdplot.par('grid2',rsf.doc.rsfpar('bool','','','''to draw grid on second axis '''))
sfstdplot.par('g2num0',rsf.doc.rsfpar('float','','','''grid mark origin on second axis '''))
sfstdplot.par('g2num',rsf.doc.rsfpar('float','','','''grid mark sampling on second axis '''))
sfstdplot.par('title',rsf.doc.rsfpar('string','','','''plot title '''))
sfstdplot.par('barlabelfat',rsf.doc.rsfpar('int','','','''bar label fatness '''))
sfstdplot.par('barlabel',rsf.doc.rsfpar('string','','','''bar label '''))
sfstdplot.par('barunit',rsf.doc.rsfpar('string','','','''bar unit '''))
sfstdplot.par('bartype',rsf.doc.rsfpar('string ',desc='''[v,h] vertical or horizontal bar (default is v) '''))
sfstdplot.par('wherexlabel',rsf.doc.rsfpar('string ',desc='''where to put horizontal axis (top,bottom) '''))
sfstdplot.par('label3',rsf.doc.rsfpar('string ',desc='''label on the third axis'''))
sfstdplot.par('unit3',rsf.doc.rsfpar('string ',desc='''unit on the third axis'''))
sfstdplot.par('whereylabel',rsf.doc.rsfpar('string ',desc='''where to put vertical label (left,right) '''))
sfstdplot.par('formatbar',rsf.doc.rsfpar('string ',desc='''format for ticmark labels in the scalebar '''))
sfstdplot.par('format2',rsf.doc.rsfpar('string ',desc=''''''))
sfstdplot.par('wherebartics',rsf.doc.rsfpar('string ',desc='''( wherebartics where to put scalebar ticmarks )(where to put scalebar ticmarks)'''))
sfstdplot.par('format1',rsf.doc.rsfpar('string ',desc='''tick mark format '''))
sfstdplot.par('format2',rsf.doc.rsfpar('string ',desc='''tickmark format ()'''))
sfstdplot.par('format3',rsf.doc.rsfpar('string ',desc='''tickmark format '''))
sfstdplot.par('wheretics',rsf.doc.rsfpar('string ',desc='''( wheretics where to put ticmarks )(where to put ticmarks)'''))
sfstdplot.par('wheretitle',rsf.doc.rsfpar('string ',desc='''where to put title (top,bottom,left,right) '''))
sfstdplot.par('title',rsf.doc.rsfpar('string ',desc='''( title plot title )(plot title)'''))
sfstdplot.par('barlabel',rsf.doc.rsfpar('string ',desc='''( barlabel bar label )(bar label)'''))
sfstdplot.par('barunit',rsf.doc.rsfpar('string ',desc='''( barunit bar unit )(bar unit)'''))
sfstdplot.par('wherebarlabel',rsf.doc.rsfpar('string ',desc='''where to put bar label (top,bottom,left,right) '''))
sfstdplot.par('label1',rsf.doc.rsfpar('string ',desc='''label on the first axis'''))
sfstdplot.par('unit1',rsf.doc.rsfpar('string ',desc='''unit on the first axis'''))
sfstdplot.par('label2',rsf.doc.rsfpar('string ',desc='''label on the second axis'''))
sfstdplot.par('unit2',rsf.doc.rsfpar('string ',desc='''unit on the second axis'''))
sfstdplot.par('wherexlabel',rsf.doc.rsfpar('string ',desc='''where to put horizontal axis (top,bottom)'''))
sfstdplot.par('whereylabel',rsf.doc.rsfpar('string ',desc='''checking to see if wantaxis is fetched (where to put vertical label (left,right))'''))
sfstdplot.par('wheretics',rsf.doc.rsfpar('string ',desc='''( wheretics where to put ticmarks )(where to put ticmarks)'''))
sfstdplot.par('wheretitle',rsf.doc.rsfpar('string ',desc='''where to put title (top,bottom,left,right)'''))
sfstdplot.par('title',rsf.doc.rsfpar('string ',desc='''( title plot title )(plot title)'''))
sfstdplot.version('2.1-git')
sfstdplot.synopsis('''sfstdplot backcol= fillcol= dash= plotfat= plotcol= xreverse=xreverse1 yreverse=yreverse1 pad=pad1 scalebar=n barmove=n tickscale=0.5 tickscale1=tickscale tickscale2=tickscale tickscale3=tickscale tickscale4=tickscale min1=umin1 min2=umin2 max1=umax1 max2=umax2 font=-1 screenratio=VP_SCREEN_RATIO screenht=VP_STANDARD_HEIGHT screenwd=screenht / screenratio crowd=0.75 xinch= crowd1=crowd yinch= crowd2=crowd xll= xur= yll= yur= barwidth=0.36 axiscol=VP_WHITE framelabelcol=VP_YELLOW cubelinecol=framelabelcol labelsz=8. larnersz=0.0f labelrot=n grid1=transp? false: grid grid2=transp? grid: false gridcol=grid? VP_RED: framecol gridfat=1 griddash=0.0f titlesz=10. barlabelsz= framelabel1=(bool) (NULL != label1) framelabel2=(bool) (NULL != label2) framelabel3=(bool) (NULL != label3) axisfat=0 axiscol=7 labelfat=0 labelsz=8. wantaxis= screenratio=VP_SCREEN_RATIO screenht=VP_STANDARD_HEIGHT screenwd=screenht / screenratio crowd=0.75 xinch= crowd1=crowd yinch= crowd2=crowd xll= xur= yll= yur= transp=transp1 xreverse=n yreverse=yreverse1 labelrot=n min1= min2= max1= max2= wanttitle=y titlefat=0 titlesz=10. wantaxis= wantaxis1= wantaxis2= wantaxis3= labelfat= label1= unit1= label3= unit3= label2= unit2= nbartic= dbarnum= obarnum= wherebartics= n1tic= d1num= o1num= n2tic= d2num= o2num= n3tic= d3num= o3num= n4tic= d4num= o4num= wheretics= grid1= g1num0= g1num= grid2= g2num0= g2num= title= barlabelfat= barlabel= barunit= bartype= wherexlabel= whereylabel= formatbar= format2= format1= format3= wheretitle= wherebarlabel=''','''''')
rsf.doc.progs['sfstdplot']=sfstdplot


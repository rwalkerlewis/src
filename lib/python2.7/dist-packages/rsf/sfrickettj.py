import rsf.doc

sfcorral = rsf.doc.rsfprog('sfcorral','user/rickettj/Mcorral.c','''Cross-correlate every trace with every other in frequency domain. ''')
sfcorral.par('nlags',rsf.doc.rsfpar('int','100','','''number of lags '''))
sfcorral.version('2.1-git')
sfcorral.synopsis('''sfcorral < inp.rsf > out.rsf nlags=100''','''''')
rsf.doc.progs['sfcorral']=sfcorral

sfsensitivity = rsf.doc.rsfprog('sfsensitivity','user/rickettj/Msensitivity.c','''Traveltime sensitivity kernels. ''')
sfsensitivity.par('nx',rsf.doc.rsfpar('int','100','',''''''))
sfsensitivity.par('ny',rsf.doc.rsfpar('int','1','',''''''))
sfsensitivity.par('nz',rsf.doc.rsfpar('int','100','','''dimensions '''))
sfsensitivity.par('ox',rsf.doc.rsfpar('float','0.','',''''''))
sfsensitivity.par('oy',rsf.doc.rsfpar('float','0.','',''''''))
sfsensitivity.par('oz',rsf.doc.rsfpar('float','0.','','''grid origin '''))
sfsensitivity.par('dx',rsf.doc.rsfpar('float','0.02','',''''''))
sfsensitivity.par('dy',rsf.doc.rsfpar('float','0.02','',''''''))
sfsensitivity.par('dz',rsf.doc.rsfpar('float','0.02','','''grid spacing '''))
sfsensitivity.par('v0',rsf.doc.rsfpar('float','1.5','','''surface velocity '''))
sfsensitivity.par('vgrad',rsf.doc.rsfpar('float','.8','','''velocity gradient '''))
sfsensitivity.par('mode',rsf.doc.rsfpar('int','6','','''source coordinates '''))
sfsensitivity.par('sx',rsf.doc.rsfpar('float','0.15','',''''''))
sfsensitivity.par('sy',rsf.doc.rsfpar('float','0.','',''''''))
sfsensitivity.par('sz',rsf.doc.rsfpar('float','0.15','','''source '''))
sfsensitivity.par('rx',rsf.doc.rsfpar('float','1.6','',''''''))
sfsensitivity.par('ry',rsf.doc.rsfpar('float','0.','',''''''))
sfsensitivity.par('rz',rsf.doc.rsfpar('float','1.605','','''receiver '''))
sfsensitivity.par('t1',rsf.doc.rsfpar('float','0.8','',''''''))
sfsensitivity.par('t2',rsf.doc.rsfpar('float','1.2','',''''''))
sfsensitivity.par('dt',rsf.doc.rsfpar('float','0.008','',''''''))
sfsensitivity.version('2.1-git')
sfsensitivity.synopsis('''sfsensitivity > out.rsf nx=100 ny=1 nz=100 ox=0. oy=0. oz=0. dx=0.02 dy=0.02 dz=0.02 v0=1.5 vgrad=.8 mode=6 sx=0.15 sy=0. sz=0.15 rx=1.6 ry=0. rz=1.605 t1=0.8 t2=1.2 dt=0.008''','''''')
rsf.doc.progs['sfsensitivity']=sfsensitivity

sfpmod = rsf.doc.rsfprog('sfpmod','user/rickettj/Mpmod.c','''Random plane wave modeling. ''')
sfpmod.par('np',rsf.doc.rsfpar('int','1','',''''''))
sfpmod.par('gauss',rsf.doc.rsfpar('int','0','',''''''))
sfpmod.par('type',rsf.doc.rsfpar('int','1','','''1 single plane layer
       2 two plane layers
       3 point diffractor '''))
sfpmod.par('ampmax',rsf.doc.rsfpar('float','1.','',''''''))
sfpmod.par('rc1',rsf.doc.rsfpar('float','0.2','',''''''))
sfpmod.par('rc2',rsf.doc.rsfpar('float','0.2','',''''''))
sfpmod.par('h1',rsf.doc.rsfpar('float','200.','',''''''))
sfpmod.par('h2',rsf.doc.rsfpar('float','150.','',''''''))
sfpmod.par('v1',rsf.doc.rsfpar('float','2000.','',''''''))
sfpmod.par('v2',rsf.doc.rsfpar('float','3000.','',''''''))
sfpmod.par('pmax',rsf.doc.rsfpar('float','0.000332','',''''''))
sfpmod.par('phi',rsf.doc.rsfpar('float','0.1','',''''''))
sfpmod.par('xloc',rsf.doc.rsfpar('float','200.','',''''''))
sfpmod.par('seed',rsf.doc.rsfpar('int','time(NULL)','','''random seed '''))
sfpmod.version('2.1-git')
sfpmod.synopsis('''sfpmod < inp.rsf > out.rsf np=1 gauss=0 type=1 ampmax=1. rc1=0.2 rc2=0.2 h1=200. h2=150. v1=2000. v2=3000. pmax=0.000332 phi=0.1 xloc=200. seed=time(NULL)''','''''')
rsf.doc.progs['sfpmod']=sfpmod


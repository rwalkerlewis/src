import rsf.doc

sfstiff3d = rsf.doc.rsfprog('sfstiff3d','user/jyan/Mstiff3d.c','''stiffness tensor for 3D TTI models''')
sfstiff3d.par('vp',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('vs',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('ro',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('epsilon',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('delta',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('gamma',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('nu',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('alpha',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfstiff3d.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfstiff3d.par('dim',rsf.doc.rsfpar('int','2','','''verbosity flag '''))
sfstiff3d.version('2.1-git')
sfstiff3d.synopsis('''sfstiff3d vp=Fvp.rsf vs=Fvs.rsf ro=Fro.rsf epsilon=Fepsilon.rsf delta=Fdelta.rsf gamma=Fgamma.rsf nu=Fnu.rsf alpha=Falpha.rsf > Fcc.rsf verb=n dim=2''','''''')
rsf.doc.progs['sfstiff3d']=sfstiff3d

sfdistmap = rsf.doc.rsfprog('sfdistmap','user/jyan/Mdistmap.c','''''')
sfdistmap.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfdistmap.version('2.1-git')
sfdistmap.synopsis('''sfdistmap < Fin.rsf > Fout.rsf verb=n''','''''')
rsf.doc.progs['sfdistmap']=sfdistmap

sfdensity = rsf.doc.rsfprog('sfdensity','user/jyan/Mdensity.c','''Compute density ''')
sfdensity.par('inY',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfdensity.par('inZ',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfdensity.par('inW',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfdensity.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfdensity.par('n1',rsf.doc.rsfpar('int','20','','''verbosity flag '''))
sfdensity.par('n2',rsf.doc.rsfpar('int','20','','''verbosity flag '''))
sfdensity.par('n3',rsf.doc.rsfpar('int','20','','''verbosity flag '''))
sfdensity.par('n4',rsf.doc.rsfpar('int','20','','''verbosity flag '''))
sfdensity.version('2.1-git')
sfdensity.synopsis('''sfdensity < Fin.rsf inY=FinY.rsf inZ=FinZ.rsf inW=FinW.rsf > Fout.rsf verb=n n1=20 n2=20 n3=20 n4=20''','''''')
rsf.doc.progs['sfdensity']=sfdensity

sfconvolve2 = rsf.doc.rsfprog('sfconvolve2','user/jyan/Mconvolve2.c','''2D convolution with arbitrary filter ''')
sfconvolve2.par('flt',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfconvolve2.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfconvolve2.par('stat',rsf.doc.rsfpar('bool','y','','''stationary operator '''))
sfconvolve2.version('2.1-git')
sfconvolve2.synopsis('''sfconvolve2 < Fx.rsf > Fy.rsf flt=Ff.rsf verb=n stat=y''','''''')
rsf.doc.progs['sfconvolve2']=sfconvolve2

sfewefd2dtti = rsf.doc.rsfprog('sfewefd2dtti','user/jyan/Mewefd2dtti.c','''elastic time-domain FD modeling ''')
sfewefd2dtti.par('ccc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd2dtti.par('sou',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd2dtti.par('rec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd2dtti.par('wfl',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfewefd2dtti.par('den',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd2dtti.par('ompchunk',rsf.doc.rsfpar('int','1','','''OpenMP data chunk size '''))
sfewefd2dtti.par('ompnth',rsf.doc.rsfpar('int','0','','''OpenMP available threads '''))
sfewefd2dtti.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfewefd2dtti.par('snap',rsf.doc.rsfpar('bool','n','','''wavefield snapshots flag '''))
sfewefd2dtti.par('free',rsf.doc.rsfpar('bool','n','','''free surface flag '''))
sfewefd2dtti.par('ssou',rsf.doc.rsfpar('bool','n','','''stress source '''))
sfewefd2dtti.par('opot',rsf.doc.rsfpar('bool','n','','''output potential '''))
sfewefd2dtti.par('nbell',rsf.doc.rsfpar('int','1','','''bell size '''))
sfewefd2dtti.par('jdata',rsf.doc.rsfpar('int','1','',''''''))
sfewefd2dtti.par('jsnap',rsf.doc.rsfpar('int','nt','',''''''))
sfewefd2dtti.par('nq1',rsf.doc.rsfpar('int','sf_n(az)','',''''''))
sfewefd2dtti.par('nq2',rsf.doc.rsfpar('int','sf_n(ax)','',''''''))
sfewefd2dtti.par('oq1',rsf.doc.rsfpar('float','sf_o(az)','',''''''))
sfewefd2dtti.par('oq2',rsf.doc.rsfpar('float','sf_o(ax)','',''''''))
sfewefd2dtti.version('2.1-git')
sfewefd2dtti.synopsis('''sfewefd2dtti < Fwav.rsf ccc=Fccc.rsf sou=Fsou.rsf rec=Frec.rsf wfl=Fwfl.rsf > Fdat.rsf den=Fden.rsf ompchunk=1 ompnth=0 verb=n snap=n free=n ssou=n opot=n nbell=1 jdata=1 jsnap=nt nq1=sf_n(az) nq2=sf_n(ax) oq1=sf_o(az) oq2=sf_o(ax)''','''''')
rsf.doc.progs['sfewefd2dtti']=sfewefd2dtti

sfewefd3dtti = rsf.doc.rsfprog('sfewefd3dtti','user/jyan/Mewefd3dtti.c','''3D elastic time-domain FD modeling ''')
sfewefd3dtti.par('ccc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3dtti.par('den',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3dtti.par('sou',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3dtti.par('rec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3dtti.par('wfl',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfewefd3dtti.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfewefd3dtti.par('snap',rsf.doc.rsfpar('bool','n','','''wavefield snapshots flag '''))
sfewefd3dtti.par('free',rsf.doc.rsfpar('bool','n','','''free surface flag '''))
sfewefd3dtti.par('ssou',rsf.doc.rsfpar('bool','n','','''stress source '''))
sfewefd3dtti.par('dabc',rsf.doc.rsfpar('bool','n','','''absorbing BC '''))
sfewefd3dtti.par('nbell',rsf.doc.rsfpar('int','1','','''bell size '''))
sfewefd3dtti.par('jdata',rsf.doc.rsfpar('int','1','',''''''))
sfewefd3dtti.par('jsnap',rsf.doc.rsfpar('int','nt','',''''''))
sfewefd3dtti.par('nqz',rsf.doc.rsfpar('int','sf_n(az)','',''''''))
sfewefd3dtti.par('nqx',rsf.doc.rsfpar('int','sf_n(ax)','',''''''))
sfewefd3dtti.par('nqy',rsf.doc.rsfpar('int','sf_n(ay)','',''''''))
sfewefd3dtti.par('oqz',rsf.doc.rsfpar('float','sf_o(az)','',''''''))
sfewefd3dtti.par('oqx',rsf.doc.rsfpar('float','sf_o(ax)','',''''''))
sfewefd3dtti.par('oqy',rsf.doc.rsfpar('float','sf_o(ay)','',''''''))
sfewefd3dtti.version('2.1-git')
sfewefd3dtti.synopsis('''sfewefd3dtti < Fwav.rsf ccc=Fccc.rsf den=Fden.rsf sou=Fsou.rsf rec=Frec.rsf wfl=Fwfl.rsf > Fdat.rsf verb=n snap=n free=n ssou=n dabc=n nbell=1 jdata=1 jsnap=nt nqz=sf_n(az) nqx=sf_n(ax) nqy=sf_n(ay) oqz=sf_o(az) oqx=sf_o(ax) oqy=sf_o(ay)''','''''')
rsf.doc.progs['sfewefd3dtti']=sfewefd3dtti

sfederiv = rsf.doc.rsfprog('sfederiv','user/jyan/Mederiv.c','''''')
sfederiv.par('ccc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfederiv.par('zdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv.par('xdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfederiv.par('stat',rsf.doc.rsfpar('bool','y','','''stationary operator '''))
sfederiv.version('2.1-git')
sfederiv.synopsis('''sfederiv ccc=Fccc.rsf < Fspk.rsf zdel=Fzdel.rsf xdel=Fxdel.rsf verb=n stat=y''','''''')
rsf.doc.progs['sfederiv']=sfederiv

sfederiv2d = rsf.doc.rsfprog('sfederiv2d','user/jyan/Mederiv2d.c','''''')
sfederiv2d.par('ccc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfederiv2d.par('zdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv2d.par('xdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv2d.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfederiv2d.par('stat',rsf.doc.rsfpar('bool','y','','''stationary operator '''))
sfederiv2d.par('sig',rsf.doc.rsfpar('float','1.5','','''sigma '''))
sfederiv2d.par('order',rsf.doc.rsfpar('int','8','','''order '''))
sfederiv2d.par('domain',rsf.doc.rsfpar('string ',desc=''''''))
sfederiv2d.par('tapertype',rsf.doc.rsfpar('string ',desc=''''''))
sfederiv2d.version('2.1-git')
sfederiv2d.synopsis('''sfederiv2d ccc=Fccc.rsf < Fspk.rsf zdel=Fzdel.rsf xdel=Fxdel.rsf verb=n stat=y sig=1.5 order=8 domain= tapertype=''','''''')
rsf.doc.progs['sfederiv2d']=sfederiv2d

sfederiv3d = rsf.doc.rsfprog('sfederiv3d','user/jyan/Mederiv3d.c','''''')
sfederiv3d.par('ccc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfederiv3d.par('zdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3d.par('xdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3d.par('ydel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3d.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfederiv3d.par('stat',rsf.doc.rsfpar('bool','y','','''stationary operator '''))
sfederiv3d.par('domain',rsf.doc.rsfpar('string ',desc=''''''))
sfederiv3d.version('2.1-git')
sfederiv3d.synopsis('''sfederiv3d ccc=Fccc.rsf < Fspk.rsf zdel=Fzdel.rsf xdel=Fxdel.rsf ydel=Fydel.rsf verb=n stat=y domain=''','''''')
rsf.doc.progs['sfederiv3d']=sfederiv3d

sfederiv3dfilters = rsf.doc.rsfprog('sfederiv3dfilters','user/jyan/Mederiv3dfilters.c','''''')
sfederiv3dfilters.par('ccc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfederiv3dfilters.par('pzdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('pxdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('pydel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('hzdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('hxdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('hydel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('vzdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('vxdel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('vydel',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfederiv3dfilters.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfederiv3dfilters.par('stat',rsf.doc.rsfpar('bool','y','','''stationary operator '''))
sfederiv3dfilters.par('domain',rsf.doc.rsfpar('string ',desc=''''''))
sfederiv3dfilters.version('2.1-git')
sfederiv3dfilters.synopsis('''sfederiv3dfilters ccc=Fccc.rsf < Fspk.rsf pzdel=Fpzdel.rsf pxdel=Fpxdel.rsf pydel=Fpydel.rsf hzdel=Fhzdel.rsf hxdel=Fhxdel.rsf hydel=Fhydel.rsf vzdel=Fvzdel.rsf vxdel=Fvxdel.rsf vydel=Fvydel.rsf verb=n stat=y domain=''','''''')
rsf.doc.progs['sfederiv3dfilters']=sfederiv3dfilters

sfsortdensity = rsf.doc.rsfprog('sfsortdensity','user/jyan/Msortdensity.c','''sort density''')
sfsortdensity.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfsortdensity.par('thrsh',rsf.doc.rsfpar('float','0.05','','''verbosity flag '''))
sfsortdensity.version('2.1-git')
sfsortdensity.synopsis('''sfsortdensity < Fin.rsf > Fout.rsf verb=n thrsh=0.05''','''''')
rsf.doc.progs['sfsortdensity']=sfsortdensity


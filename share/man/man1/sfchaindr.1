.TH sfchaindr 1  "APRIL 2019" Madagascar "Madagascar Manuals"
.SH NAME
sfchaindr \- chain diffraction extraction debug version
.SH SYNOPSIS
.B sfchaindr < inp.rsf > out.rsf vel=vel.rsf dip=dip.rsf dipim=dipim.rsf diffmod=diffmod.rsf outpwd=outpwdcheck.rsf outdip=outdipcheck.rsf gather=gather.rsf offset=offset.rsf adj=n sm=y domod=y reg=0.0 debug= normalize=y nh= antialias=1.0 apt=nx angle=90.0 half=y verb=y rho=1.-1./nt dh= h0= v_1= v_2= v_3= v_4= passthr=0.001 eps=0.001 epst2=0.001 pad=nt order=1 nj1=1
.SH PARAMETERS
.PD 0
.TP
.I bool   
.B adj
.B =n
.R  [y/n]	if perform derivative filtering = PWD
.TP
.I float  
.B angle
.B =90.0
.R  	angle aperture
.TP
.I float  
.B antialias
.B =1.0
.R  	antialiasing
.TP
.I int    
.B apt
.B =nx
.R  	integral aperture
.TP
.I bool   
.B debug
.B =
.R  [y/n]
.TP
.I float  
.B dh
.B =
.R  	offset sampling (for modeling)
.TP
.I file   
.B diffmod
.B =
.R  	auxiliary input file name
.TP
.I file   
.B dip
.B =
.R  	auxiliary input file name
.TP
.I file   
.B dipim
.B =
.R  	auxiliary input file name
.TP
.I bool   
.B domod
.B =y
.R  [y/n]	get regularization parameter
.TP
.I float  
.B eps
.B =0.001
.R  
.TP
.I float  
.B epst2
.B =0.001
.R  
.TP
.I string 
.B gather
.B =
.R  	auxiliary output file name
.TP
.I float  
.B h0
.B =
.R  	first offset (for modeling)
.TP
.I bool   
.B half
.B =y
.R  [y/n]	if y, the third axis is half-offset instead of full offset
.TP
.I int    
.B nh
.B =
.R  	number of offsets (for modeling)
.TP
.I int    
.B nj1
.B =1
.R  	antialiasing
.TP
.I bool   
.B normalize
.B =y
.R  [y/n]	normalize for the fold
.TP
.I string 
.B offset
.B =
.R  	auxiliary input file name
.TP
.I int    
.B order
.B =1
.R  [1,2,3]	accuracy order
.TP
.I file   
.B outdip
.B =
.R  	auxiliary output file name
.TP
.I file   
.B outpwd
.B =
.R  	auxiliary output file name
.TP
.I int    
.B pad
.B =nt
.R  	output time samples
.TP
.I float  
.B passthr
.B =0.001
.R  
.TP
.I float  
.B reg
.B =0.0
.R  	debug flag
.TP
.I float  
.B rho
.B =1.-1./nt
.R  	Leaky integration constant
.TP
.I bool   
.B sm
.B =y
.R  [y/n]	if perform modelling via Kirchhoff
.TP
.I float  
.B v_1
.B =
.R  
.TP
.I float  
.B v_2
.B =
.R  
.TP
.I float  
.B v_3
.B =
.R  
.TP
.I float  
.B v_4
.B =
.R  
.TP
.I file   
.B vel
.B =
.R  	auxiliary input file name
.TP
.I bool   
.B verb
.B =y
.R  [y/n]	verbosity flag
.SH SOURCE
.I user/dmerzlikin/Mchaindr.c
.SH VERSION
2.1-git

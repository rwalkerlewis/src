.TH sfmpipfwi 1  "APRIL 2019" Madagascar "Madagascar Manuals"
.SH NAME
sfmpipfwi \- Visco-acoustic Forward Modeling, FWI, and RTM based on SLS model 
.SH SYNOPSIS
.B sfmpipfwi Fvel=Fv.rsf Fq=Fq.rsf Fwavelet=Fw.rsf output=Fdat.rsf output=Finv.rsf Fgrad=Fgrad.rsf output=Fimg.rsf Fsrc=Fsrc.rsf Fmwt=Fmwt.rsf media=1 function=2 verb=n nb=100 coef=0.003 acqui_type=1 ns= ds= s0= sz=5 nr=acpar->nx dr=acpar->dx r0=acpar->x0 rz=1 f0= interval=1 fhi=0.5/acpar->dt flo=0. onlygrad=n wt1=acpar->t0 wt2=acpar->t0+(acpar->nt-1)*acpar->dt woff1=acpar->r0 woff2=acpar->r0+(acpar->nr-1)*acpar->dr oreo=n waterz=51 grectx=3 grectz=3 niter= conv_error= c1=1e-4 c2=0.9 v1=0. v2=10. onlygrad=n wt1=acpar->t0 wt2=acpar->t0+(acpar->nt-1)*acpar->dt woff1=acpar->r0 woff2=acpar->r0+(acpar->nr-1)*acpar->dr oreo=n waterz=0 waterzb=0 grectx=3 grectz=3 niter= repeat=1 conv_error= c1=1e-4 c2=0.9 v1=0. v2=10.
.SH PARAMETERS
.PD 0
.TP
.I file   
.B Fgrad
.B =
.R  	auxiliary output file name
.TP
.I file   
.B Fmwt
.B =
.R  	auxiliary output file name
.TP
.I file   
.B Fq
.B =
.R  	auxiliary input file name
.TP
.I file   
.B Fsrc
.B =
.R  	auxiliary output file name
.TP
.I file   
.B Fvel
.B =
.R  	auxiliary input file name
.TP
.I file   
.B Fwavelet
.B =
.R  	auxiliary input file name
.TP
.I int    
.B acqui_type
.B =1
.R  	if 1, fixed acquisition; if 2, marine acquisition; if 3, symmetric acquisition
.TP
.I float  
.B c1
.B =1e-4
.R  
.TP
.I float  
.B c2
.B =0.9
.R  
.TP
.I float  
.B coef
.B =0.003
.R  	absorbing boundary coefficient
.TP
.I float  
.B conv_error
.B =
.R  	final convergence error
.TP
.I float  
.B dr
.B =acpar->dx
.R  	receiver interval
.TP
.I float  
.B ds
.B =
.R  	shot interval
.TP
.I float  
.B f0
.B =
.R  	reference frequency
.TP
.I float  
.B fhi
.B =0.5/acpar->dt
.R  
.TP
.I float  
.B flo
.B =0.
.R  
.TP
.I int    
.B function
.B =2
.R  	if 1, forward modeling; if 2, FWI; if 3, RTM
.TP
.I int    
.B grectx
.B =3
.R  	gradient smoothing radius in x
.TP
.I int    
.B grectz
.B =3
.R  	gradient smoothing radius in z
.TP
.I int    
.B interval
.B =1
.R  	wavefield storing interval
.TP
.I int    
.B media
.B =1
.R  	if 1, acoustic media; if 2, visco-acoustic media
.TP
.I int    
.B nb
.B =100
.R  	boundary width
.TP
.I int    
.B niter
.B =
.R  	iteration number
.TP
.I int    
.B nr
.B =acpar->nx
.R  	number of receiver
.TP
.I int    
.B ns
.B =
.R  	shot number
.TP
.I bool   
.B onlygrad
.B =n
.R  [y/n]	only want gradident
.TP
.I bool   
.B oreo
.B =n
.R  [y/n]	keep oreo or keep cream
.TP
.I file   
.B output
.B =
.R  	auxiliary output file name
.TP
.I float  
.B r0
.B =acpar->x0
.R  	receiver origin
.TP
.I int    
.B repeat
.B =1
.R  	repeat resetting alpha
.TP
.I int    
.B rz
.B =1
.R  	receiver depth
.TP
.I float  
.B s0
.B =
.R  	shot origin
.TP
.I int    
.B sz
.B =5
.R  	source depth
.TP
.I float  
.B v1
.B =0.
.R  
.TP
.I float  
.B v2
.B =10.
.R  
.TP
.I bool   
.B verb
.B =n
.R  [y/n]	verbosity flag
.TP
.I int    
.B waterz
.B =0
.R  	water layer depth
.TP
.I int    
.B waterzb
.B =0
.R  	water layer depth from bottom up
.TP
.I float  
.B woff1
.B =acpar->r0
.R  
.TP
.I float  
.B woff2
.B =acpar->r0+(acpar->nr-1)*acpar->dr
.R  
.TP
.I float  
.B wt1
.B =acpar->t0
.R  
.TP
.I float  
.B wt2
.B =acpar->t0+(acpar->nt-1)*acpar->dt
.R  
.SH SOURCE
.I user/jsun/Mmpipfwi.c
.SH VERSION
2.1-git

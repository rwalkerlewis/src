.TH sfmyradon2 1  "APRIL 2019" Madagascar "Madagascar Manuals"
.SH NAME
sfmyradon2 \- Linear/parabolic radon transform frequency domain implementation 
.SH SYNOPSIS
.B sfmyradon2 < in.rsf > out.rsf adj=y inv=n np= dp= p0= niter=100 eps=0.01 nx= ox= dx= parab=n x0=1. invmode=
.SH COMMENTS
Also referred to as high-resolution radon transform
Note: I borrowed a lot from /system/seismic/radon+Mradon.c. The distinction:
I am using FFTW because I am inexperienced in invoking kiss_fft. 

.SH PARAMETERS
.PD 0
.TP
.I bool   
.B adj
.B =y
.R  [y/n]	if y, perform adjoint operation
.TP
.I float  
.B dp
.B =
.R  	p sampling (if adj=y)
.TP
.I float  
.B dx
.B =
.R  	sampling interval in x
.TP
.I float  
.B eps
.B =0.01
.R  	regularization parameter
.TP
.I bool   
.B inv
.B =n
.R  [y/n]	if y, perform inverse operation
.TP
.I string 
.B invmode
.B =
.R  	inverse method: 'ls' if least-squares; 'toeplitz' if use FFT
.TP
.I int    
.B niter
.B =100
.R  	number of CGLS iterations
.TP
.I int    
.B np
.B =
.R  	number of p values (if adj=y)
.TP
.I int    
.B nx
.B =
.R  	number of offsets (if adj=n)
.TP
.I float  
.B ox
.B =
.R  	x origin
.TP
.I float  
.B p0
.B =
.R  	p origin (if adj=y)
.TP
.I bool   
.B parab
.B =n
.R  [y/n]	if y, parabolic Radon transform
.TP
.I float  
.B x0
.B =1.
.R  	reference offset
.SH USED IN
.TP
.I xjtu/test/myradon2
.SH SOURCE
.I user/pyang/Mmyradon2.c
.SH VERSION
2.1-git

.TH sflrlsrtm2mpi 1  "APRIL 2019" Madagascar "Madagascar Manuals"
.SH NAME
sflrlsrtm2mpi \- 2-D Low-rank One-step Least Pre-stack Reverse-Time-Migration in the complex domain (both img and data are complex valued) without MPI...
.SH SYNOPSIS
.B sflrlsrtm2mpi < Frcd.rsf src=Fsrc.rsf > Fimg.rsf left=left.rsf right=right.rsf leftb=leftb.rsf rightb=rightb.rsf vel=Fvel.rsf tmpwf=Ftmpwf.rsf tmpbwf=Ftmpbwf.rsf verb=n adj=y wantwf=n wantrecord=y illum=y shtbgn= sht0=shtbgn shtend= shtint= spz= spz= gpz= gpl= snapinter=10 srctrunc=0.4 rectz=1 rectx=1 repeat=0 top=40 bot=40 lft=40 rht=40 pad1=1
.SH COMMENTS
img :  crosscorrelation with source normalization (stdout)

.SH PARAMETERS
.PD 0
.TP
.I bool   
.B adj
.B =y
.R  [y/n]	migration
.TP
.I int    
.B bot
.B =40
.R  
.TP
.I int    
.B gpl
.B =
.R  
.TP
.I int    
.B gpz
.B =
.R  
.TP
.I bool   
.B illum
.B =y
.R  [y/n]	if n, no source illumination
.TP
.I file   
.B left
.B =
.R  	auxiliary input file name
.TP
.I file   
.B leftb
.B =
.R  	auxiliary input file name
.TP
.I int    
.B lft
.B =40
.R  
.TP
.I int    
.B pad1
.B =1
.R  	padding factor on the first axis
.TP
.I int    
.B rectx
.B =1
.R  
.TP
.I int    
.B rectz
.B =1
.R  
.TP
.I int    
.B repeat
.B =0
.R  	abc parameters
.TP
.I int    
.B rht
.B =40
.R  	Set I/O file
.TP
.I file   
.B right
.B =
.R  	auxiliary input file name
.TP
.I file   
.B rightb
.B =
.R  	auxiliary input file name
.TP
.I int    
.B sht0
.B =shtbgn
.R  	actual shot origin on grid
.TP
.I int    
.B shtbgn
.B =
.R  
.TP
.I int    
.B shtend
.B =
.R  
.TP
.I int    
.B shtint
.B =
.R  
.TP
.I int    
.B snapinter
.B =10
.R  	snap interval
.TP
.I int    
.B spz
.B =
.R  
.TP
.I file   
.B src
.B =
.R  	auxiliary input file name
.TP
.I float  
.B srctrunc
.B =0.4
.R  
.TP
.I file   
.B tmpbwf
.B =
.R  	auxiliary output file name
.TP
.I file   
.B tmpwf
.B =
.R  	auxiliary output file name
.TP
.I int    
.B top
.B =40
.R  
.TP
.I file   
.B vel
.B =
.R  	auxiliary input file name
.TP
.I bool   
.B verb
.B =n
.R  [y/n]	verbosity
.TP
.I bool   
.B wantrecord
.B =y
.R  [y/n]	if n, using record data generated by this program
.TP
.I bool   
.B wantwf
.B =n
.R  [y/n]	output forward and backward wavefield
.SH SOURCE
.I user/jsun/Mlrlsrtm2mpi.c
.SH VERSION
2.1-git

.TH sfduffing 1  "APRIL 2019" Madagascar "Madagascar Manuals"
.SH NAME
sfduffing \- Duffing differential equation solved by 4th order Runge-Kutta method. 
.SH SYNOPSIS
.B sfduffing < in.rsf > out.rsf sfile=sfile.rsf gamma=0.75 omega=1 kxi=1 x0=0 y0=0 pow1=1 pow2=3 verb=n ricker=n
.SH COMMENTS
Duffing equation: x'' + 0.5 x' - x + x^3 = gamma cos(omega t) + kxi input(t)

.SH PARAMETERS
.PD 0
.TP
.I float  
.B gamma
.B =0.75
.R  	strength of external force
.TP
.I float  
.B kxi
.B =1
.R  	adjustment for input signal
.TP
.I float  
.B omega
.B =1
.R  	angular frequence of external force
.TP
.I int    
.B pow1
.B =1
.R  	power of first non-linear restitution term
.TP
.I int    
.B pow2
.B =3
.R  	power of second non-linear restitution term
.TP
.I bool   
.B ricker
.B =n
.R  [y/n]	if y need extenal input for external force
.TP
.I string 
.B sfile
.B =
.R  	auxiliary input file name
.TP
.I bool   
.B verb
.B =n
.R  [y/n]	verbosity flag
.TP
.I float  
.B x0
.B =0
.R  	initial value of x0
.TP
.I float  
.B y0
.B =0
.R  	initial value of y0
.SH SOURCE
.I user/yliu/Mduffing.c
.SH VERSION
2.1-git

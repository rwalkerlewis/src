.TH sfbigmpistack 1  "APRIL 2019" Madagascar "Madagascar Manuals"
.SH NAME
sfbigmpistack \- remap and stacks rsf files using mpi 
.SH SYNOPSIS
.B sfbigmpistack nx= ny= nz= debug=n verb=n dx= dy= dz= oz= oy= ox= nf= jf= of= prefix= shots= oname=
.SH COMMENTS

Assumes that files are commonly named sequentially, e.g.:

File001.rsf
File002.rsf
File003.rsf ...
FileN.rsf

Such that all files can be represented as a prefix, which 
is a printf like statement that will be evaluated for all
files to be included in a range.

For the above example the prefix would be:

prefix="File%03d.rsf" 

The nf, jf, and of parameters specify a range of numbers to evaluate the 
prefix for, giving the program filenames to be used for summing
together.  For example:  

nf=10,of=0,jf=1 --> (0,1,2,3,4,5,6,7,8,9,10)
nf=10,of=5,jf=2 --> (5,7,9,11,13,15,17,19,21,23)

If there are more files than processes, then this program will subdivide
the files onto various processes, and run multiple rounds until
everything is done.

These must be 3D arrays (or 2D ,but with three dimensions), arrays must be
X-Y-Z
a1-a2-a3

.SH PARAMETERS
.PD 0
.TP
.I bool   
.B debug
.B =n
.R  [y/n]
.TP
.I float  
.B dx
.B =
.R  
.TP
.I float  
.B dy
.B =
.R  
.TP
.I float  
.B dz
.B =
.R  
.TP
.I int    
.B jf
.B =
.R  	delta between files
.TP
.I int    
.B nf
.B =
.R  	number of files to stack
.TP
.I int    
.B nx
.B =
.R  	origin of files
.TP
.I int    
.B ny
.B =
.R  	origin of files
.TP
.I int    
.B nz
.B =
.R  	origin of files
.TP
.I int    
.B of
.B =
.R  	origin of files
.TP
.I string 
.B oname
.B =
.R  	name of output file
.TP
.I float  
.B ox
.B =
.R  
.TP
.I float  
.B oy
.B =
.R  
.TP
.I float  
.B oz
.B =
.R  
.TP
.I string 
.B prefix
.B =
.R  	printf like prefix
.TP
.I string 
.B shots
.B =
.R  	name of shot file
.TP
.I bool   
.B verb
.B =n
.R  [y/n]
.SH SOURCE
.I user/cwp/Mbigmpistack.c
.SH VERSION
2.1-git

.TH sfdmigda 1  "APRIL 2019" Madagascar "Madagascar Manuals"
.SH NAME
sfdmigda \- 2D depth scattering-angle Kirchhoff migration  
.SH SYNOPSIS
.B sfdmigda < dataFile.rsf vel=velFile.rsf > imageFile.rsf dag=dagFile.rsf cig=acigFile.rsf mcig=mcigFile.rsf esct=tEscFile.rsf escx=xEscFile.rsf axis2label=0 isAA=y izn=dp.zNum ixn=dp.xNum iyn=rp.is3D ? vp.yNum : 1 izo=dp.zStart ixo=dp.xStart iyo=dp.yStart izd=dp.zStep ixd=dp.xStep iyd=dp.yStep dipn=161 dipo=-80.f dipd=1.f iscatn=1 iscato=0.f iscatd=2 * gp.dipStep ttd=0.002f ttn=(int) floor(0.001 * 0.5 * maxTime / ttStep + 1) ttrayd=gp.dipStep / 2.f ttrayo=minttRay ttrayn=(int) floor((maxttRay - minttRay) / ttRayStep + 1)
.SH PARAMETERS
.PD 0
.TP
.I int    
.B axis2label
.B =0
.R  	0 - shot; 1 - cmp; 2 - receiver
.TP
.I string 
.B cig
.B =
.R  	output file containing CIGs in the scattering-angle domain (auxiliary output file name)
.TP
.I string 
.B dag
.B =
.R  	output file containing CIGs in the dip-angle domain (auxiliary output file name)
.TP
.I float  
.B dipd
.B =1.f
.R  	step in dip-angle
.TP
.I int    
.B dipn
.B =161
.R  	number of dip-angles
.TP
.I float  
.B dipo
.B =-80.f
.R  	first dip-angle
.TP
.I string 
.B esct
.B =
.R  	output file containing escqpe times (auxiliary output file name)
.TP
.I string 
.B escx
.B =
.R  	output file containing escape positions (auxiliary output file name)
.TP
.I bool   
.B isAA
.B =y
.R  [y/n]	if y, apply anti-aliasing
.TP
.I float  
.B iscatd
.B =2 * gp.dipStep
.R  	scattering-angle increment (in degree)
.TP
.I int    
.B iscatn
.B =1
.R  	number of scattering-angles
.TP
.I float  
.B iscato
.B =0.f
.R  	first scattering-angle (in degree)
.TP
.I float  
.B ixd
.B =dp.xStep
.R  	step in inlines (in meters)
.TP
.I int    
.B ixn
.B =dp.xNum
.R  	number of imaged inlines
.TP
.I float  
.B ixo
.B =dp.xStart
.R  	first imaged inline (in meters)
.TP
.I float  
.B iyd
.B =dp.yStep
.R  	step in crosslines (in meters)
.TP
.I int    
.B iyn
.B =rp.is3D ? vp.yNum : 1
.R  	number of imaged crosslines
.TP
.I float  
.B iyo
.B =dp.yStart
.R  	first imaged crossline (in meters)
.TP
.I float  
.B izd
.B =dp.zStep
.R  	step in depth (in meters)
.TP
.I int    
.B izn
.B =dp.zNum
.R  	number of imaged depth samples
.TP
.I float  
.B izo
.B =dp.zStart
.R  	first imaged depth (in meters)
.TP
.I string 
.B mcig
.B =
.R  	output file containing multi-CIGs (in the dip-angle and the scattering-angle domain both (auxiliary output file name)
.TP
.I float  
.B ttd
.B =0.002f
.R  	travel-times increment
.TP
.I int    
.B ttn
.B =(int) floor(0.001 * 0.5 * maxTime / ttStep + 1)
.R  	travel-times number
.TP
.I float  
.B ttrayd
.B =gp.dipStep / 2.f
.R  	travel-times rays increment
.TP
.I int    
.B ttrayn
.B =(int) floor((maxttRay - minttRay) / ttRayStep + 1)
.R  	travel-times rays number
.TP
.I float  
.B ttrayo
.B =minttRay
.R  	travel-times rays start
.TP
.I string 
.B vel
.B =
.R  	velocity model file (velocity in m/s) (auxiliary input file name)
.SH USED IN
.TP
.I gallery/sigsbee/kirMulti
.TP
.I gallery/twohalf/kirMulti
.TP
.I tccs/optapert/depthMig
.TP
.I tccs/optapert/sigsbee
.TP
.I tccs/optapert/theo
.TP
.I tccs/time2depth2/vgrad
.SH SOURCE
.I user/aklokov/Mdmigda.cc
.SH VERSION
2.1-git

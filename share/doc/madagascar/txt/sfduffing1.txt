Program sfduffing1 | 1D signal analysis by using Duffing differential equation solved by 4th order Runge-Kutta method. 
[SYNOPSIS]
sfduffing1 < in.rsf > out.rsf restor=restor.rsf gamma=0.75 omega=1 kxi=1 x0=0 y0=0 pow1=1 pow2=3 phi=0. verb=n cosine=y
[COMMENTS]
Duffing equation: x''/(omega^2)+0.5 x'/omega-x+x^3=gamma cos(omega t+phi)+kxi R(t)

[PARAMETERS]
bool    | cosine | =y |  [y/n] | 	if n need extenal input for periodic restoring force 
float   | gamma | =0.75 |   | 	strength of external force
float   | kxi | =1 |   | 	adjustment for input signal
float   | omega | =1 |   | 	angular frequence of external force
float   | phi | =0. |   | 	phase of cosine signal unit=pi
int     | pow1 | =1 |   | 	power of first non-linear restitution term
int     | pow2 | =3 |   | 	power of second non-linear restitution term
string  | restor | = |   | 	auxiliary input file name
bool    | verb | =n |  [y/n] | 	verbosity flag 
float   | x0 | =0 |   | 	initial value of x0
float   | y0 | =0 |   | 	initial value of y0
[DIRECTORY]
user/yliu

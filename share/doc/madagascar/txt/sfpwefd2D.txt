Program sfpwefd2D | Short description line
[SYNOPSIS]
sfpwefd2D < Fwav.rsf sro=Fsro.rsf fro=Ffro.rsf phi=Fphi.rsf kdr=Fkdr.rsf kfl=Fkfl.rsf ksg=Fksg.rsf prm=Fprm.rsf fvs=Ffvs.rsf shm=Fshm.rsf tor=Ftor.rsf sou=Fsou.rsf rec=Frec.rsf wfl=Fwfl.rsf > Fdat.rsf srctype=0 ani=-1 verb=y snap=n free=n dabc=y abcone=n debug=y cfl=y opot=n nqz=sf_n(az) nqx=sf_n(ax) oqz=sf_o(az) oqx=sf_o(ax) nbell=1 jdata=1 nb=100 jsnap=nt fmax=
[COMMENTS]
Comments here blablabla lorem ipsum dolores sit amet...

You can use several paragraphs for comments, no problem.
[PARAMETERS]
bool    | abcone | =n |  [y/n] | 	use sharp brake at end of boundary layer 
int     | ani | =-1 |   | 	Anisotropy type, see comments 
bool    | cfl | =y |  [y/n] | 	use CFL check, will cause program to fail if not satisfied 
bool    | dabc | =y |  [y/n] | 	use sponge absorbing BC 
bool    | debug | =y |  [y/n] | 	print debugging info 
float   | fmax | = |   | 	
bool    | free | =n |  [y/n] | 	free surface flag 
file    | fro | = |   | 	auxiliary input file name
file    | fvs | = |   | 	auxiliary input file name
int     | jdata | =1 |   | 	Absorbing Boundary 
int     | jsnap | =nt |   | 	
file    | kdr | = |   | 	auxiliary input file name
file    | kfl | = |   | 	auxiliary input file name
file    | ksg | = |   | 	auxiliary input file name
int     | nb | =100 |   | 	padding size for absorbing boundary 
int     | nbell | =1 |   | 	bell size 
int     | nqx | =sf_n(ax) |   | 	
int     | nqz | =sf_n(az) |   | 	
bool    | opot | =n |  [y/n] | 	output potentials 
float   | oqx | =sf_o(ax) |   | 	
float   | oqz | =sf_o(az) |   | 	
file    | phi | = |   | 	auxiliary input file name
file    | prm | = |   | 	auxiliary input file name
file    | rec | = |   | 	auxiliary input file name
file    | shm | = |   | 	auxiliary input file name
bool    | snap | =n |  [y/n] | 	wavefield snapshots flag 
file    | sou | = |   | 	auxiliary input file name
int     | srctype | =0 |   | 	source type, see comments 
file    | sro | = |   | 	auxiliary input file name
file    | tor | = |   | 	auxiliary input file name
bool    | verb | =y |  [y/n] | 	verbosity flag 
file    | wfl | = |   | 	auxiliary output file name
[DIRECTORY]
user/rlwalker

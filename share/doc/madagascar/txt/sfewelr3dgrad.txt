Program sfewelr3dgrad | 3D elastic recursive integral time extrapolation using shared-memory parallel FFT (with gradient term)
[SYNOPSIS]
sfewelr3dgrad < Fwav.rsf ccc=Fccc.rsf sou=Fsou.rsf rec=Frec.rsf rnk=Frnk.rsf lft=Flft.rsf rht=Frht.rsf wfl=Fwfl.rsf > Fdat.rsf verb=n snap=n free=n back=n esou=n tstp=n dabc=n nbell=NOP jdata=1 jsnap=nt nb=NOP cb=1.f nqz=sf_n(az) nqx=sf_n(ax) nqy=sf_n(ay) oqz=sf_o(az) oqx=sf_o(ax) oqy=sf_o(ay)
[COMMENTS]
sou wavelet  (nx,ny,nc,nt)
rec data     (nx,ny,nc,nt)
sou geometry (nc,nx,ny)
rec geometry (nc,nx,ny)

[PARAMETERS]
bool    | back | =n |  [y/n] | 	backward extrapolation flag (for rtm) 
float   | cb | =1.f |   | 	
file    | ccc | = |   | 	auxiliary input file name
bool    | dabc | =n |  [y/n] | 	absorbing BC 
bool    | esou | =n |  [y/n] | 	explosive force source 
bool    | free | =n |  [y/n] | 	free surface flag 
int     | jdata | =1 |   | 	
int     | jsnap | =nt |   | 	
file    | lft | = |   | 	auxiliary input file name
int     | nb | =NOP |   | 	
int     | nbell | =NOP |   | 	bell size 
int     | nqx | =sf_n(ax) |   | 	
int     | nqy | =sf_n(ay) |   | 	
int     | nqz | =sf_n(az) |   | 	
float   | oqx | =sf_o(ax) |   | 	
float   | oqy | =sf_o(ay) |   | 	
float   | oqz | =sf_o(az) |   | 	
file    | rec | = |   | 	auxiliary input file name
file    | rht | = |   | 	auxiliary input file name
file    | rnk | = |   | 	auxiliary input file name
bool    | snap | =n |  [y/n] | 	wavefield snapshots flag 
file    | sou | = |   | 	auxiliary input file name
bool    | tstp | =n |  [y/n] | 	two-step propagator 
bool    | verb | =n |  [y/n] | 	verbosity flag 
file    | wfl | = |   | 	auxiliary output file name
[DIRECTORY]
user/jsun

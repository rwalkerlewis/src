Program sfhyperdif | Solving 1-D transportation equation using finite difference algorithm 
[SYNOPSIS]
sfhyperdif > out.rsf dinit=dinit.rsf dtrue=dtrue.rsf wanttrue=n wantinit=n nt= dt= ox= nx= dx= type=
[COMMENTS]
\partial(u)/\partial(t)+a(x,t)\partial(u)/\partial(x), 0<t<=T, x->unlimited,
u(x,0)=f(x).  
[PARAMETERS]
file    | dinit | = |   | 	auxiliary output file name
float   | dt | = |   | 	temporal sampling 
file    | dtrue | = |   | 	auxiliary output file name
float   | dx | = |   | 	spatial sampling 
int     | nt | = |   | 	number of temporal points 
int     | nx | = |   | 	number of spatial points 
float   | ox | = |   | 	spatial starting point 
string  | type | = |   | 	[upwind, friedrichs, wendroff] get the type for solving hyperbola partial differential equation, the default is upwind 
bool    | wantinit | =n |  [y/n] | 	if want initial value. y: want, n: don't want. 
bool    | wanttrue | =n |  [y/n] | 	if want true solution. y: want, n: don't want. 
[DIRECTORY]
user/chenyk
